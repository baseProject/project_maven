<?xml version="1.0" encoding="UTF-8"?> 
<beans:beans xmlns="http://www.springframework.org/schema/security" 
        xmlns:beans="http://www.springframework.org/schema/beans" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd"> 
                  
    <global-method-security pre-post-annotations="enabled" /> 
   
    <!-- 国际化信息 -->
    <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
       <beans:property name="basename" value="classpath:/META-INF/config/messages_zh_CN"/>
    </beans:bean>  
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/>
    
      
    <http pattern="/login.html" security="none" />
    <http pattern="/resources/*" security="none" />
    <http use-expressions="true" auto-config="true"> 
        <form-login login-page="/login.jsp" 
                    login-processing-url="/j_spring_security_check" 
                    default-target-url="/index.html" 
                    authentication-failure-url="/login.jsp?error=true" /> 
        <logout logout-success-url="/login.jsp" invalidate-session="true" /> 
        <remember-me /> 
        <!-- session管理 --> 
        <session-management invalid-session-url="/login.jsp"> 
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" /> 
        </session-management> 
          
        <!-- FILTER_SECURITY_INTERCEPTOR Spring Security默认的Filter -->
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>   
    </http> 
      
    <!-- 自定义过滤器 --> 
    <beans:bean id="myFilter" class="com.zhangjiaolong.auth.security.MySecurityFilterInterceptor"> 
        <beans:property name="authenticationManager" ref="authenticationManager" /> 
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager" /> 
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" /> 
    </beans:bean> 
      
    <!-- 配置认证管理器  --> 
    <authentication-manager alias="authenticationManager"> 
        <authentication-provider ref="daoAuthenticationProvider" /> 
    </authentication-manager> 
      
    <beans:bean id="myUserDetailService" class="com.zhangjiaolong.auth.security.MyUserDetailService"> 
        <beans:property name="userDao" ref="IUserDao"></beans:property> 
    </beans:bean> 
      
    <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 --> 
    <beans:bean id="myAccessDecisionManager" class="com.zhangjiaolong.auth.security.MyAccessDecisionManager"></beans:bean> 
      
    <!-- 资源权限关系，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色去访问 --> 
    <beans:bean id="mySecurityMetadataSource" class="com.zhangjiaolong.auth.security.MySecurityMetadataSource"> 
        <beans:constructor-arg name="resourceDao" ref="IResourceDao"></beans:constructor-arg>
    </beans:bean> 
      
    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> 
        <beans:property name="userDetailsService" ref="myUserDetailService" /> 
        <beans:property name="passwordEncoder" ref="passwordEncoder" /> 
        <beans:property name="saltSource" ref="saltSource" /> 
        <beans:property name="hideUserNotFoundExceptions" value="false" /> 
    </beans:bean> 
      
    <!-- md5密码验证  --> 
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" /> 
    <!-- 加盐值  --> 
    <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"> 
        <beans:property name="userPropertyToUse" value="username" />
    </beans:bean>
</beans:beans> 